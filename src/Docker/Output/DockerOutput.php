<?php

namespace Testcontainers\Docker\Output;

use Symfony\Component\Process\Process;

/**
 * Represents the output of a Docker command executed via Symfony Process.
 *
 * This class provides methods to retrieve the standard output, error output,
 * and exit code of the Docker command.
 */
class DockerOutput
{
    /**
     * The Symfony Process instance used to run the Docker command.
     *
     * @var Process
     */
    protected $process;

    /**
     * @param Process $process
     */
    public function __construct($process)
    {
        $this->process = $process;
    }

    /**
     * Retrieve the standard output from the Docker process.
     *
     * This method returns the output generated by the Docker command
     * executed by the Symfony Process instance.
     *
     * @return string the standard output of the Docker process
     */
    public function getOutput()
    {
        return $this->process->getOutput();
    }

    /**
     * Retrieve the error output from the Docker process.
     *
     * This method returns the error output generated by the Docker command
     * executed by the Symfony Process instance.
     *
     * @return string the error output of the Docker process
     */
    public function getErrorOutput()
    {
        return $this->process->getErrorOutput();
    }

    /**
     * Retrieve the exit code from the Docker process.
     *
     * This method returns the exit code of the Docker command executed by the
     * Symfony Process instance. The exit code indicates the success or failure
     * of the command, where 0 typically means success and any non-zero value
     * indicates an error.
     *
     * @return null|int the exit code of the Docker process, or null if the process
     *                  has not terminated yet
     */
    public function getExitCode()
    {
        return $this->process->getExitCode();
    }
}
